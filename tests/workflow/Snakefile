# https://snakemake.readthedocs.io/en/stable/tutorial/basics.html

import os


SAMPLES = ["A", "B"]

IN_DIR = config.get('in_dir', os.path.join(workflow.basedir, 'input'))



rule all:
    input:
        "plots/quals.svg"


rule bwa_map:
    input:
        f"{IN_DIR}/genome.fa",
        f"{IN_DIR}/samples/{{sample}}.fastq"
    output:
        "mapped_reads/{sample}.bam"
    shell:
        # "bwa mem {input} | samtools view -Sb - > {output}"
        "touch {output}"


rule samtools_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    shell:
        # "samtools sort -T sorted_reads/{wildcards.sample} "
        # "-O bam {input} > {output}"
        "cp {input} {output}"


rule samtools_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    shell:
        # "samtools index {input}"
        "cp {input} {output}"


rule bcftools_call:
    input:
        fa=f"{IN_DIR}/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=SAMPLES),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=SAMPLES)
    output:
        "calls/all.vcf"
    shell:
        # "bcftools mpileup -f {input.fa} {input.bam} | "
        # "bcftools call -mv - > {output}"
        "touch {output}"


rule plot_quals:
    input:
        "calls/all.vcf"
    output:
        "plots/quals.svg"
    # script:
    #     "scripts/plot-quals.py"
    shell:
        "touch {output}"
